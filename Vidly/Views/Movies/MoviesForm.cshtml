@model Vidly.ViewModels.MovieFormViewModel
@{
    var title = (Model.Movie == null) ? "New Movie" : "Edit Movie";
    ViewBag.Title = @title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@title</h2>

@using (Html.BeginForm("Save", "Movies", FormMethod.Post, new { @class = "form-horizontal" }))
{
    var error_class = (ViewData.ModelState.IsValid) ? "" : "has-error";   
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name, new { @class = "col-lg-2 control-label" })
        <div class="col-lg-10">
            @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.Name)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleasedDate, new { @class = "col-lg-2 control-label" })
        <div class="col-lg-10">
            @Html.TextBoxFor(m => m.Movie.ReleasedDate, "{0:d MMM yyyy}", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.ReleasedDate)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.GenreTypesId, new { @class = "col-lg-2 control-label" })
        <div class="col-lg-10">
            @Html.DropDownListFor(m => m.Movie.GenreTypesId, new SelectList(Model.GenreTypes, "Id", "Name"), "Select Genre Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.GenreTypesId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumberStock, new { @class = "col-lg-2 control-label" })
        <div class="col-lg-10">
            @Html.TextBoxFor(m => m.Movie.NumberStock, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Movie.NumberStock)
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-10 col-lg-offset-2">
            @Html.HiddenFor(m => m.Movie.Id)
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}


